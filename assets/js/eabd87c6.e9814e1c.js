"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[7527],{8453:(i,n,e)=>{e.d(n,{R:()=>c,x:()=>a});var o=e(6540);const t={},s=o.createContext(t);function c(i){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof i?i(n):{...n,...i}},[n,i])}function a(i){let n;return n=i.disableParentContext?"function"==typeof i.components?i.components(t):i.components||t:c(i.components),o.createElement(s.Provider,{value:n},i.children)}},8535:(i,n,e)=>{e.r(n),e.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"configuration/notifications","title":"Notifications","description":"HyprDynamicMonitors can show desktop notifications when configuration changes occur. Notifications are sent via D-Bus using the standard org.freedesktop.Notifications interface.","source":"@site/versioned_docs/version-v1.3.1/configuration/notifications.md","sourceDirName":"configuration","slug":"/configuration/notifications","permalink":"/docs/v1.3.1/configuration/notifications","draft":false,"unlisted":false,"editUrl":"https://github.com/fiffeek/hyprdynamicmonitors/tree/main/docs/versioned_docs/version-v1.3.1/configuration/notifications.md","tags":[],"version":"v1.3.1","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Power Events","permalink":"/docs/v1.3.1/configuration/power-events"},"next":{"title":"Callbacks","permalink":"/docs/v1.3.1/configuration/callbacks"}}');var t=e(4848),s=e(8453);const c={sidebar_position:5},a="Notifications",r={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Disabling Notifications",id:"disabling-notifications",level:2},{value:"Customizing Timeout",id:"customizing-timeout",level:2},{value:"What Gets Notified",id:"what-gets-notified",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Alternative: Custom Callbacks",id:"alternative-custom-callbacks",level:2}];function d(i){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...i.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"notifications",children:"Notifications"})}),"\n",(0,t.jsxs)(n.p,{children:["HyprDynamicMonitors can show desktop notifications when configuration changes occur. Notifications are sent via D-Bus using the standard ",(0,t.jsx)(n.code,{children:"org.freedesktop.Notifications"})," interface."]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:"[notifications]\ndisabled = false      # Enable/disable notifications (default: false)\ntimeout_ms = 10000   # Notification timeout in milliseconds (default: 10000)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"disabling-notifications",children:"Disabling Notifications"}),"\n",(0,t.jsx)(n.p,{children:"To disable notifications completely:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:"[notifications]\ndisabled = true\n"})}),"\n",(0,t.jsx)(n.h2,{id:"customizing-timeout",children:"Customizing Timeout"}),"\n",(0,t.jsx)(n.p,{children:"To show brief notifications (3 seconds):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:"[notifications]\ntimeout_ms = 3000\n"})}),"\n",(0,t.jsx)(n.p,{children:"For longer notifications (15 seconds):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:"[notifications]\ntimeout_ms = 15000\n"})}),"\n",(0,t.jsx)(n.h2,{id:"what-gets-notified",children:"What Gets Notified"}),"\n",(0,t.jsx)(n.p,{children:"Notifications are shown when:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A new monitor configuration profile is applied"}),"\n",(0,t.jsx)(n.li,{children:"The monitor configuration changes"}),"\n",(0,t.jsx)(n.li,{children:"Profile switching occurs"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The notification includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The name of the profile being applied"}),"\n",(0,t.jsx)(n.li,{children:"Basic information about the configuration change"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,t.jsx)(n.p,{children:"Notifications require:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Write access to system D-Bus (should be default on most systems)"}),"\n",(0,t.jsxs)(n.li,{children:["A notification daemon running (e.g., ",(0,t.jsx)(n.code,{children:"dunst"}),", ",(0,t.jsx)(n.code,{children:"mako"}),", or desktop environment's built-in notification system)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"alternative-custom-callbacks",children:"Alternative: Custom Callbacks"}),"\n",(0,t.jsxs)(n.p,{children:["If you want more control over notifications, consider using ",(0,t.jsx)(n.a,{href:"./callbacks",children:"callbacks"})," instead:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:"[general]\npost_apply_exec = \"notify-send 'HyprDynamicMonitors' 'Profile applied successfully'\"\n"})}),"\n",(0,t.jsx)(n.p,{children:"This allows you to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Customize notification text"}),"\n",(0,t.jsx)(n.li,{children:"Use different notification tools"}),"\n",(0,t.jsx)(n.li,{children:"Add additional actions or scripts"}),"\n"]})]})}function u(i={}){const{wrapper:n}={...(0,s.R)(),...i.components};return n?(0,t.jsx)(n,{...i,children:(0,t.jsx)(d,{...i})}):d(i)}}}]);