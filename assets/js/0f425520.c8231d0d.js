"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[9463],{8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var o=i(6540);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}},9025:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"configuration/overview","title":"Overview","description":"HyprDynamicMonitors automatically creates a default configuration file on first run if none exists at the specified path (defaults to ~/.config/hypr/hyprdynamicmonitors.toml).","source":"@site/docs/configuration/overview.md","sourceDirName":"configuration","slug":"/configuration/overview","permalink":"/docs/next/configuration/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/fiffeek/hyprdynamicmonitors/tree/main/docs/docs/configuration/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/docs/next/category/configuration"},"next":{"title":"Monitor Matching","permalink":"/docs/next/configuration/monitor-matching"}}');var t=i(4848),s=i(8453);const r={sidebar_position:1},l="Overview",a={},c=[{value:"Default Configuration",id:"default-configuration",level:2},{value:"Configuration Structure",id:"configuration-structure",level:2},{value:"General Settings",id:"general-settings",level:3},{value:"Power Events",id:"power-events",level:3},{value:"Lid Events",id:"lid-events",level:3},{value:"Profiles",id:"profiles",level:3},{value:"Notifications",id:"notifications",level:3},{value:"Hot Reload",id:"hot-reload",level:3},{value:"Scoring",id:"scoring",level:3},{value:"Static Template Values",id:"static-template-values",level:3},{value:"Fallback Profile",id:"fallback-profile",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,t.jsxs)(n.p,{children:["HyprDynamicMonitors automatically creates a default configuration file on first run if none exists at the specified path (defaults to ",(0,t.jsx)(n.code,{children:"~/.config/hypr/hyprdynamicmonitors.toml"}),")."]}),"\n",(0,t.jsx)(n.h2,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,t.jsx)(n.p,{children:"The default configuration:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Automatically detects your system's power line using ",(0,t.jsx)(n.code,{children:"upower -e"})]}),"\n",(0,t.jsxs)(n.li,{children:["Searches for common power line paths (e.g., ",(0,t.jsx)(n.code,{children:"line_power_ACAD"}),", ",(0,t.jsx)(n.code,{children:"line_power_AC"}),", ",(0,t.jsx)(n.code,{children:"line_power_ADP1"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Falls back to ",(0,t.jsx)(n.code,{children:"/org/freedesktop/UPower/devices/line_power_ACAD"})," if detection fails"]}),"\n",(0,t.jsxs)(n.li,{children:["Creates a minimal config with power event monitoring but ",(0,t.jsx)(n.strong,{children:"no profiles"})]}),"\n",(0,t.jsx)(n.li,{children:"Allows you to start adding profiles immediately without manually configuring power events"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-structure",children:"Configuration Structure"}),"\n",(0,t.jsx)(n.p,{children:"The configuration file is written in TOML and consists of several main sections:"}),"\n",(0,t.jsx)(n.h3,{id:"general-settings",children:"General Settings"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[general]\ndestination = "$HOME/.config/hypr/monitors.conf"\ndebounce_time_ms = 1500\npre_apply_exec = "notify-send \'Switching profile...\'"\npost_apply_exec = "notify-send \'Profile applied\'"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"destination"})," - Where the monitor configuration file will be created or linked"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"debounce_time_ms"})," - Collect events for this duration before applying changes (prevents configuration thrashing, default: 1500ms)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"pre_apply_exec"})," - Command to run before applying configuration (optional)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"post_apply_exec"})," - Command to run after applying configuration (optional)"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"./callbacks",children:"Callbacks"})," for details on exec commands."]}),"\n",(0,t.jsx)(n.h3,{id:"power-events",children:"Power Events"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[power_events]\n[power_events.dbus_query_object]\npath = "/org/freedesktop/UPower/devices/line_power_ACAD"\n\n[[power_events.dbus_signal_match_rules]]\nobject_path = "/org/freedesktop/UPower/devices/line_power_ACAD"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Power events monitor your system's power state (AC/Battery) via D-Bus. See ",(0,t.jsx)(n.a,{href:"./power-events",children:"Power Events"})," for details."]}),"\n",(0,t.jsx)(n.h3,{id:"lid-events",children:"Lid Events"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:"[lid_events]\n# custom config goes here, the defaults should work in most cases\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Lid events monitor your system's lid state (Opened/Closed) via D-Bus. See ",(0,t.jsx)(n.a,{href:"./lid-events",children:"Lid Events"})," for details."]}),"\n",(0,t.jsx)(n.h3,{id:"profiles",children:"Profiles"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[profiles.laptop_only]\nconfig_file = "hyprconfigs/laptop.conf"\nconfig_file_type = "static"\n\n[[profiles.laptop_only.conditions.required_monitors]]\nname = "eDP-1"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Profiles define different monitor configurations for different setups. Each profile can have:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Configuration file (static or template)"}),"\n",(0,t.jsx)(n.li,{children:"Conditions (required monitors, power state, lid state)"}),"\n",(0,t.jsx)(n.li,{children:"Callbacks (pre/post apply commands)"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"./profiles",children:"Profiles"})," for details."]}),"\n",(0,t.jsx)(n.h3,{id:"notifications",children:"Notifications"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:"[notifications]\ndisabled = false\ntimeout_ms = 10000\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Configure desktop notifications for configuration changes. See ",(0,t.jsx)(n.a,{href:"./notifications",children:"Notifications"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"hot-reload",children:"Hot Reload"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:"[hot_reload_section]\ndebounce_time_ms = 1000\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Hot reload watches configuration files for changes and automatically reloads them. The ",(0,t.jsx)(n.code,{children:"debounce_time_ms"})," setting controls how long to wait before applying changes after detecting a file modification."]}),"\n",(0,t.jsx)(n.h3,{id:"scoring",children:"Scoring"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:"[scoring]\nname_match = 10\ndescription_match = 5\npower_state_match = 3\nlid_state_match = 2\n"})}),"\n",(0,t.jsx)(n.p,{children:"Customize the scoring system for profile selection when multiple profiles match. Higher scores win:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name_match"}),' - Points for exact monitor name match (e.g., "eDP-1")']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"description_match"})," - Points for exact monitor description match"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"power_state_match"})," - Bonus points for matching power state"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"lid_state_match"})," - Bonus points for matching lid state"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"./monitor-matching",children:"Monitor Matching"})," for details on how profiles are selected."]}),"\n",(0,t.jsx)(n.h3,{id:"static-template-values",children:"Static Template Values"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[static_template_values]\ndefault_vrr = "1"\ndefault_res = "2880x1920"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Define global values that can be used in all templates. These can be overridden per-profile. See ",(0,t.jsx)(n.a,{href:"../advanced/templates",children:"Templates"})," and ",(0,t.jsx)(n.a,{href:"./profiles",children:"Profiles"})," for details."]}),"\n",(0,t.jsx)(n.h3,{id:"fallback-profile",children:"Fallback Profile"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",children:'[fallback_profile]\nconfig_file = "hyprconfigs/fallback.conf"\nconfig_file_type = "static"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Define a fallback profile that will be used when no other profile matches the current state. See ",(0,t.jsx)(n.a,{href:"./profiles",children:"Profiles"})," for details."]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./monitor-matching",children:"Monitor Matching"})," - Learn how to match monitors"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"./profiles",children:"Profiles"})," - Configure different monitor setups"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../advanced/templates",children:"Templates"})," - Use dynamic configuration generation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/fiffeek/hyprdynamicmonitors/tree/main/examples",children:"Examples"})," - See complete configuration examples"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);