"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[277],{6172:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"advanced/systemd","title":"Running with systemd","description":"For production use, it\'s recommended to run HyprDynamicMonitors as a systemd user service. This ensures automatic restart on failures and proper integration with session management.","source":"@site/docs/advanced/systemd.md","sourceDirName":"advanced","slug":"/advanced/systemd","permalink":"/hyprdynamicmonitors/docs/advanced/systemd","draft":false,"unlisted":false,"editUrl":"https://github.com/fiffeek/hyprdynamicmonitors/tree/main/docs/docs/advanced/systemd.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Templates","permalink":"/hyprdynamicmonitors/docs/advanced/templates"},"next":{"title":"FAQ","permalink":"/hyprdynamicmonitors/docs/faq"}}');var t=s(4848),i=s(8453);const a={sidebar_position:3},o="Running with systemd",d={},c=[{value:"Hyprland under systemd",id:"hyprland-under-systemd",level:2},{value:"Run on Boot with Restarts",id:"run-on-boot-with-restarts",level:2},{value:"Custom systemd Target",id:"custom-systemd-target",level:2},{value:"Alternative: Wrapper Script",id:"alternative-wrapper-script",level:2},{value:"Service Management",id:"service-management",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Service fails to start",id:"service-fails-to-start",level:3},{value:"Configuration changes not applying",id:"configuration-changes-not-applying",level:3},{value:"Environment variables not available",id:"environment-variables-not-available",level:3},{value:"See Also",id:"see-also",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"running-with-systemd",children:"Running with systemd"})}),"\n",(0,t.jsx)(n.p,{children:"For production use, it's recommended to run HyprDynamicMonitors as a systemd user service. This ensures automatic restart on failures and proper integration with session management."}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Ensure you're properly ",(0,t.jsx)(n.a,{href:"https://wiki.hypr.land/Nix/Hyprland-on-Home-Manager/#programs-dont-work-in-systemd-services-but-do-on-the-terminal",children:"pushing environment variables to systemd"})," for Hyprland integration."]})}),"\n",(0,t.jsx)(n.h2,{id:"hyprland-under-systemd",children:"Hyprland under systemd"}),"\n",(0,t.jsxs)(n.p,{children:["If you run ",(0,t.jsx)(n.a,{href:"https://wiki.hypr.land/Useful-Utilities/Systemd-start/",children:"Hyprland under systemd"}),", setup is straightforward."]}),"\n",(0,t.jsxs)(n.p,{children:["Create ",(0,t.jsx)(n.code,{children:"~/.config/systemd/user/hyprdynamicmonitors.service"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"[Unit]\nDescription=HyprDynamicMonitors - Dynamic monitor configuration for Hyprland\nAfter=graphical-session.target\nWants=graphical-session.target\nPartOf=hyprland-session.target\n\n[Service]\nType=exec\nExecStart=/usr/bin/hyprdynamicmonitors run\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=hyprland-session.target\n"})}),"\n",(0,t.jsx)(n.p,{children:"Enable and start the service:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"systemctl --user daemon-reload\nsystemctl --user enable hyprdynamicmonitors\nsystemctl --user start hyprdynamicmonitors\n"})}),"\n",(0,t.jsx)(n.h2,{id:"run-on-boot-with-restarts",children:"Run on Boot with Restarts"}),"\n",(0,t.jsx)(n.p,{children:"You can run the service on boot and let restarts handle initialization:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"[Unit]\nDescription=HyprDynamicMonitors - Dynamic monitor configuration for Hyprland\nAfter=default.target\n\n[Service]\nType=exec\nExecStart=/usr/bin/hyprdynamicmonitors run\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=default.target\n"})}),"\n",(0,t.jsx)(n.p,{children:"This approach:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keeps failing until Hyprland is ready/launched"}),"\n",(0,t.jsx)(n.li,{children:"Waits for environment variables to be propagated"}),"\n",(0,t.jsx)(n.li,{children:"Automatically recovers once the system is ready"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"custom-systemd-target",children:"Custom systemd Target"}),"\n",(0,t.jsxs)(n.p,{children:["You can create ",(0,t.jsx)(n.a,{href:"https://github.com/fiffeek/.dotfiles.v2/commit/2a0d400b81031e3786a2779c36f70c9771aee884",children:"a custom systemd target started by Hyprland"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["In ",(0,t.jsx)(n.code,{children:"~/.config/hypr/hyprland.conf"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-conf",children:"exec-once = systemctl --user start hyprland-custom-session.target\nbind = $mainMod, X, exec, systemctl --user stop hyprland-session.target\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Create ",(0,t.jsx)(n.code,{children:"~/.config/systemd/user/hyprland-custom-session.target"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"[Unit]\nDescription=A target for other services when hyprland becomes ready\nAfter=graphical-session-pre.target\nWants=graphical-session-pre.target\nBindsTo=graphical-session.target\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Then create ",(0,t.jsx)(n.code,{children:"~/.config/systemd/user/hyprdynamicmonitors.service"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"[Unit]\nDescription=Run hyprdynamicmonitors daemon\nAfter=hyprland-custom-session.target\nAfter=dbus.socket\nRequires=dbus.socket\nPartOf=hyprland-custom-session.target\n\n[Service]\nType=exec\nExecStart=/usr/bin/hyprdynamicmonitors run\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=hyprland-custom-session.target\n"})}),"\n",(0,t.jsx)(n.h2,{id:"alternative-wrapper-script",children:"Alternative: Wrapper Script"}),"\n",(0,t.jsx)(n.p,{children:"If you prefer a wrapper script approach, create a simple restart loop:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\nwhile true; do\n    /usr/bin/hyprdynamicmonitors run\n    echo "HyprDynamicMonitors exited with code $?, restarting in 5 seconds..."\n    sleep 5\ndone\n'})}),"\n",(0,t.jsx)(n.p,{children:"Then execute it from Hyprland:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-conf",children:"exec-once = /path/to/the/script.sh\n"})}),"\n",(0,t.jsx)(n.h2,{id:"service-management",children:"Service Management"}),"\n",(0,t.jsx)(n.p,{children:"Once set up as a systemd service, you can manage it with standard systemd commands:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Check status\nsystemctl --user status hyprdynamicmonitors\n\n# View logs\njournalctl --user -u hyprdynamicmonitors -f\n\n# Restart the service\nsystemctl --user restart hyprdynamicmonitors\n\n# Reload configuration (sends SIGHUP)\nsystemctl --user reload hyprdynamicmonitors\n\n# Stop the service\nsystemctl --user stop hyprdynamicmonitors\n\n# Disable automatic start\nsystemctl --user disable hyprdynamicmonitors\n"})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"service-fails-to-start",children:"Service fails to start"}),"\n",(0,t.jsx)(n.p,{children:"Check the logs:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"journalctl --user -u hyprdynamicmonitors -n 50\n"})}),"\n",(0,t.jsx)(n.p,{children:"Common issues:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Hyprland not running yet (expected with fail-fast design)"}),"\n",(0,t.jsx)(n.li,{children:"Missing environment variables"}),"\n",(0,t.jsx)(n.li,{children:"Invalid configuration file"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"configuration-changes-not-applying",children:"Configuration changes not applying"}),"\n",(0,t.jsx)(n.p,{children:"Reload the service:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"systemctl --user reload hyprdynamicmonitors\n"})}),"\n",(0,t.jsx)(n.p,{children:"Or rely on automatic hot reload (enabled by default)."}),"\n",(0,t.jsx)(n.h3,{id:"environment-variables-not-available",children:"Environment variables not available"}),"\n",(0,t.jsxs)(n.p,{children:["Ensure environment variables are properly exported to systemd. See ",(0,t.jsx)(n.a,{href:"https://wiki.hypr.land/Nix/Hyprland-on-Home-Manager/#programs-dont-work-in-systemd-services-but-do-on-the-terminal",children:"Hyprland's systemd integration guide"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../usage/signals",children:"Usage - Signals"})," - Signal handling and hot reload"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../category/quick-start",children:"Quick Start"})," - Initial setup guide"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(6540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);